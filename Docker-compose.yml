version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./API/Dockerfile
      target: prod
    image: ${DOCKERHUB_USERNAME:-local}/restaurant-api:${IMAGE_TAG:-dev}
    ports: ["8001:8000"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_EXPERIMENT: restaurant-api
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
      MLFLOW_ARTIFACTS_DESTINATION: ${MLFLOW_ARTIFACTS_DESTINATION}
      API_STATIC_KEY: ${API_STATIC_KEY}
      JWT_SECRET: ${JWT_SECRET}
    networks: [data_network]

  client:
    build:
      context: ./client
      dockerfile: ./streamlit.Dockerfile
    image: ${DOCKERHUB_USERNAME:-local}/restaurant-client:${IMAGE_TAG:-dev}
    environment:
      API_BASE_URL: http://api:8000
    depends_on:
      api:
        condition: service_started
    ports: ["8501:8501"]
    networks: [data_network]

  mlflow:
    build:
      context: .
      dockerfile: ./mlflow.Dockerfile
    image: ${DOCKERHUB_USERNAME:-local}/restaurant-mlflow:${IMAGE_TAG:-dev}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
      MLFLOW_ARTIFACTS_DESTINATION: ${MLFLOW_ARTIFACTS_DESTINATION}
      MLFLOW_SERVE_ARTIFACTS: "true"
      MPLCONFIGDIR: /tmp
    volumes:
      - mlflow_artifacts:/mlruns2
    ports: ["5001:5000"]
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0 if 200<=urllib.request.urlopen('http://127.0.0.1:5000/', timeout=3).getcode()<400 else 1)"]
    restart: unless-stopped
    networks: [data_network]

  monitor:
    build:
      context: .
      dockerfile: ./monitor.Dockerfile
    image: ${DOCKERHUB_USERNAME:-local}/restaurant-monitor:${IMAGE_TAG:-dev}
    working_dir: /app/API
    environment:
      PYTHONUNBUFFERED: "1"
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_EXPERIMENT: restaurant-api
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      LAT_AVG_N: "10"
      LAT_THRESHOLD_MS: "10000"
      RATING_AVG_N: "10"
      RATING_MIN_THRESHOLD: "1.0"
      CHECK_INTERVAL_SEC: "5"
      ALERT_COOLDOWN_SEC: "600"
      NO_PROXY: "mlflow,localhost,127.0.0.1"
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
    depends_on:
      mlflow:
        condition: service_started
    restart: unless-stopped
    networks: [data_network]

networks:
  data_network:
    external: true

volumes:
  mlflow_artifacts:
