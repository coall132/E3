services:
  api:
    build:
      context: ./api 
    container_name: api_ia
    ports:
      - "8001:8001"  
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    networks:
      - data_network

  services:
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    depends_on:
      - postgres
      - minio
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command:
      - mlflow
      - server
      - --host
      - 0.0.0.0
      - --port
      - "5000"
      - --backend-store-uri
      - postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
      - --default-artifact-root
      - s3://mlflow-artifacts/
    ports:
      - "5001:5000"
    networks:
      - shared_net
  monitor:
    image: python:3.11-slim
    working_dir: /app
    command: bash -lc "pip install mlflow requests numpy && python monitor/monitor_ia.py"
    volumes:
      - ./monitor:/app/monitor_ia:ro
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_EXPERIMENT: restaurant-api
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      LAT_AVG_N: "10"
      LAT_THRESHOLD_MS: "10000"
      RATING_AVG_N: "10"
      RATING_MIN_THRESHOLD: "1.0"
      CHECK_INTERVAL_SEC: "60"
      ALERT_COOLDOWN_SEC: "600"
    depends_on:
      - mlflow
    networks:
      - shared_net

networks:
  data_network:
    driver: bridge
    external: true

volumes:
  pg_data: